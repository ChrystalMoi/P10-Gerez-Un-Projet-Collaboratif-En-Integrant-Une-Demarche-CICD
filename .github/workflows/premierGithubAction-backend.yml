name: Premier GitHub Action - Backend Tests

on:
  push:
    paths:
      - 'back/**'
    branches:
      - main
  pull_request:
    paths:
      - 'back/**'
    branches:
      - main

jobs:
  test-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Vérifier le code
        uses: actions/checkout@v4

      - name: Configurer JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cacher les dépendances Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Installer les dépendances et exécuter les tests sur le backend
        working-directory: back
        run: mvn clean verify

      - name: Télécharger le rapport de couverture JaCoCo
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco

      - name: Installer SonarQube Scanner
        run: |
          curl -sS https://downloads.sonarsource.com/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip -o sonar-scanner.zip
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-4.7.0.2747-linux /opt/sonar-scanner
          sudo ln -s /opt/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner

      - name: Exécuter l'analyse SonarQube
        run: |
          sonar-scanner \
            -Dsonar.projectKey=ChrystalMoi_P10-Gerez-Un-Projet-Collaboratif-En-Integrant-Une-Demarche-CICD \
            -Dsonar.organization=chrystalmoi \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.sources=back/src \
            -Dsonar.tests=back/src/test \
            -Dsonar.java.binaries=back/target/classes \
            -Dsonar.jacoco.reportPaths=back/target/site/jacoco/jacoco.xml \
            -Dsonar.login=$SONAR_TOKEN
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}