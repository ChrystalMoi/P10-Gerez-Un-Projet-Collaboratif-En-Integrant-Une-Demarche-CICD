name: Premier GitHub Action - Frontend Tests

on:
  push:
    #paths:
     # - 'front/**'
    branches:
      - main
  pull_request:
    #paths:
     # - 'front/**'
    branches:
      - main

jobs:
  tests_et_coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Vérifier le code
        uses: actions/checkout@v4

      - name: Configurer Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.15.1'

      - name: Mettre en cache les modules Node.js
        uses: actions/cache@v4
        with:
          path: front/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('front/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Installation des dépendances
        working-directory: front
        run: npm ci

      - name: Installation de Xvfb
        run: sudo apt-get install -y xvfb

      - name: Démarrage de Xvfb
        run: |
          Xvfb :99 &
          export DISPLAY=:99 

      - name: Lancement des tests
        working-directory: front
        run: npm run test:prod -- --browsers=ChromeHeadless

      - name: Mise à jour des résultats des tests
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-results
          path: front/coverage/bobapp

      - name: Installer Java 17
        run: |
          sudo apt-get update
          sudo apt-get install openjdk-17-jdk

      - name: Installer SonarQube Scanner
        run: |
          npm install -g sonar-scanner

      - name: Upload des données de couverture pour SonarQube
        if: success()
        run: |
          npm install -g sonar-scanner
          sonar-scanner \
            -Dsonar.projectKey=ChrystalMoi_P10-Gerez-Un-Projet-Collaboratif-En-Integrant-Une-Demarche-CICD \
            -Dsonar.sources=front/src \
            -Dsonar.tests=front/src \
            -Dsonar.javascript.lcov.reportPaths=front/coverage/lcov.info \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker_deploiement:
    needs: tests_et_coverage
    runs-on: ubuntu-latest

    steps:
      - name: Vérifier le code
        uses: actions/checkout@v4

      - name: Connexion à Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construire et pousser l'image Docker du frontend
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest