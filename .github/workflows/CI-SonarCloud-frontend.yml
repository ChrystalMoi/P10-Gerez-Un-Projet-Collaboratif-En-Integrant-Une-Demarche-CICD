name: CI Workflow Frontend

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  ci-frontend:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout du code source
      - name: Vérifier le code
        uses: actions/checkout@v4

      # Étape 2 : Configuration de Node.js
      - name: Configuration de Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.15.1'

      # Étape 3 : Configuration de JDK 17
      - name: Configuration de JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      # Étape 4 : Cache des modules Node.js
      - name: Mettre en cache les modules Node.js
        uses: actions/cache@v4
        with:
          path: front/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('front/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Étape 5 : Installation des dépendances
      - name: Installation des dépendances
        working-directory: front
        run: npm ci

      # Étape 6 : Installation de Xvfb
      - name: Installation de Xvfb
        run: sudo apt-get install -y xvfb

      # Étape 7 : Démarrage de Xvfb
      - name: Démarrage de Xvfb
        run: |
          Xvfb :99 &
          export DISPLAY=:99 

      # Étape 8 : Lancement des tests
      - name: Lancement des tests
        working-directory: front
        run:  npm run test:prod -- --browsers=ChromeHeadless

      # Étape 9 : Analyse SonarQube pour le frontend
      - name: Analyse SonarQube pour le frontend
        working-directory: front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}
          JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}
        run: |
          npx sonar-scanner \
          -Dsonar.projectKey=Frontend-P10-Gerez-Un-Projet-Collaboratif \
          -Dsonar.sources=. \
          -Dsonar.projectName=Frontend-P10 \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=chrystalmoi \
          -Dsonar.token=${{ secrets.SONAR_TOKEN_FRONTEND }} \
          -Dsonar.javascript.lcov.reportPaths=front/coverage/bobapp/lcov.info

      # Étape 10 : Lister les fichiers de couverture
      - name: Liste des fichier de coverage
        working-directory: front
        run: ls -l front/coverage/bobapp

      # Étape 11 : Upload des résultats de test frontend
      - name: Upload des résultats de tests frontend
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-results
          path: front/coverage/bobapp
